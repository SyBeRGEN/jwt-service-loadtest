name: Full CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build user-auth
        working-directory: ./user-auth
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Build verification-service
        working-directory: ./verification-service
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: Ensure JMeter scripts are executable
        run: |
          chmod +x tools/jmeter/bin/jmeter || true
          chmod +x tools/jmeter/bin/*.sh || true
          chmod +x tools/jmeter/bin/*.cmd || true
          chmod +x tools/jmeter/bin/*.bat || true

      - name: Install Docker compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Start Docker Compose
        run: docker-compose up -d

      - name: Wait for services to be ready
        run: sleep 15

      - name: Run JMeter test
        run: tools/jmeter/bin/jmeter -n -t tools/jmeter/jwt_mock_test.jmx -l result.jtl -e -o report
        env:
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64

      - name: Upload result.jtl
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: result.jtl

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-html-report
          path: report/

      - name: Save Docker logs
        run: docker-compose logs > dc-logs.txt

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose-logs
          path: dc-lo

  deploy-pages:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Download HTML report artifact
        uses: actions/download-artifact@v4
        with:
          name: jmeter-html-report
          path: ./report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./report
          publish_branch: gh-pages
